#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

druid.extensions.loadList=["druid-datasketches", "druid-parquet-extensions", "druid-s3-extensions", "postgresql-metadata-storage", "druid-basic-security"]

#
# Hostname
#
# druid.host=localhost

#
# Logging
#
# Log all runtime properties on startup. Disable to avoid logging properties on startup:
druid.startup.logging.logProperties=true

#
# Zookeeper
#
druid.zk.service.host=
druid.zk.paths.base=/druid

#
# Metadata storage
#
druid.metadata.storage.type=postgresql
druid.metadata.storage.connector.connectURI=
druid.metadata.storage.connector.user=
druid.metadata.storage.connector.password=

#
# Deep storage
#
druid.storage.type=s3
druid.storage.bucket=
druid.storage.baseKey=
druid.s3.accessKey=
druid.s3.secretKey=

#
# Indexing service logs
#
druid.indexer.logs.type=s3
druid.indexer.logs.s3Bucket=
druid.indexer.logs.s3Prefix=

#
# Service discovery
#
druid.selectors.indexing.serviceName=druid/overlord
druid.selectors.coordinator.serviceName=druid/coordinator

#
# Monitoring
#
druid.monitoring.monitors=["org.apache.druid.java.util.metrics.JvmMonitor"]
druid.emitter=noop
druid.emitter.logging.logLevel=warn

# Storage type of double columns
# ommiting this will lead to index double as float at the storage layer

druid.indexing.doubleStorage=double

#
# Security
#
druid.server.hiddenProperties=["druid.s3.accessKey","druid.s3.secretKey","druid.metadata.storage.connector.password"]

#
# SQL
#
druid.sql.enable=true

#
# Lookups
#
druid.lookup.enableLookupSyncOnStartup=false

#
# Authentications
#
druid.auth.authenticatorChain=["AnalyticsAuthenticator"]
druid.auth.authenticator.AnalyticsAuthenticator.type=basic
druid.auth.authenticator.AnalyticsAuthenticator.initialAdminPassword=
druid.auth.authenticator.AnalyticsAuthenticator.initialInternalClientPassword=
druid.auth.authenticator.AnalyticsAuthenticator.credentialsValidator.type=metadata
druid.auth.authenticator.AnalyticsAuthenticator.skipOnFailure=false
druid.auth.authenticator.AnalyticsAuthenticator.authorizerName=AnalyticsAuthorizer

druid.escalator.type=basic
druid.escalator.internalClientUsername=druid_system
druid.escalator.internalClientPassword=
druid.escalator.authorizerName=

druid.auth.authorizers=["AnalyticsAuthorizer"]
druid.auth.authorizer.AnalyticsAuthorizer.type=basic